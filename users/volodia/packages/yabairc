#!/usr/bin/env sh

#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#configure-scripting-addition
#
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa
#
#window_opacity on \
#active_window_opacity 1.0 \
#normal_window_opacity 0.8 \

# global settings
yabai -m config \
  mouse_follows_focus off \
  focus_follows_mouse off \
  window_opacity off \
  window_origin_display default \
  window_placement second_child \
  window_zoom_persist off \
  window_shadow float \
  window_animation_duration 0 \
  insert_feedback_color 0xaad75f5f \
  split_ratio 0.50 \
  split_type auto \
  auto_balance off \
  top_padding 0 \
  bottom_padding 0 \
  left_padding 0 \
  right_padding 0 \
  window_gap 10 \
  layout bsp \
  mouse_modifier fn \
  mouse_action1 move \
  mouse_action2 resize \
  mouse_drop_action swap

# mission-control desktop labels
yabai -m space 1 --label web
yabai -m space 2 --label terminal
yabai -m space 3 --label code
yabai -m space 4 --label social
yabai -m space 5 --label mail
yabai -m space 6 --label music
yabai -m space 7 --label notes
yabai -m space 8 --label bib
yabai -m space 9 --label doc

# # window rules
yabai -m rule --add app="^Mail$" space=mail
yabai -m rule --add app="^Brave Browser$" space=web
yabai -m rule --add app="^Orion$" space=web
yabai -m rule --add app="^Obsidian$" space=notes
yabai -m rule --add app="^Signal$" space=social
yabai -m rule --add app="^kitty$" space=terminal
yabai -m rule --add app="^Ghostty$" space=terminal
yabai -m rule --add app="^Cursor$" space=code
yabai -m rule --add app="^TIDAL$" space=music
yabai -m rule --add app="^Discord$" space=social
yabai -m rule --add app="^Legcord$" space=social
yabai -m rule --add app="^Zotero$" space=bib
yabai -m rule --add app="^Calendar$" space=mail
yabai -m rule --add app="^Neovide$" space=code
yabai -m rule --add app="^(Calculator|System Preferences|Archive Utility)$" manage=off

# # specific space settings
# yabai -m config --space mail layout stack
yabai -m config --space social layout float

yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"

yabai -m signal --add app='^Ghostty$' event=window_created action='yabai -m space --layout bsp'
yabai -m signal --add app='^Ghostty$' event=window_destroyed action='yabai -m space --layout bsp'

# # Handle Arc and Little Arc
# yabai -m rule --add app="^Arc$" title="^Space.*$" manage=off layer=below
# yabai -m rule --add app="^Arc$" title="^$" manage=off layer=below
# yabai -m rule --add app="^Arc$" title="^.*littlearc.*$" manage=off layer=below

# window_opacity_duration 0.0 \
# active_window_opacity 1.0 \
# normal_window_opacity 0.90 \
# window_opacity off \
# insert_feedback_color 0xffd75f5f \
# active_window_border_color 0xff775759 \
# normal_window_border_color 0xff555555 \
# window_border_radius 12 \
# window_border_blur on \
# window_border_hidpi on \
# window_border off \

# window_border_width 0 \
# Fix PiP
# yabai -m rule --add subrole="^AXSystemDialog$" manage=off mouse_follows_focus=off

# applications with custom rules
# applications="(Arc|Calendar|Mail|Reminders|Notes|Microsoft Outlook|Discord|Messages|Slack|Firefox|Chrome|Code|Microsoft Word|Preview|Terminal|iTerm2|QuickTime|Player|Spotify|Music|Brave Browser|Kitty|Alacritty|Trello)"

# # NOTE: you need to set the settings for the applications in the
# #       list first, or else they don't apply properly and you can end up with
# #       some weird border/float/window behaviours

# # everything listed gets sent to below layer to prevent
# # them from covering floating applications/popup windows
# yabai -m rule --add app="^${applications}$" manage=on layer=below

echo "yabai configuration loaded.."
